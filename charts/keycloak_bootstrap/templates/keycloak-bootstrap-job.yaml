apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Values.name }}
  labels:
    app: {{ .Values.name }}
    chart: "{{ $.Chart.Name }}-{{ $.Chart.Version }}"
    release: "{{ $.Release.Name }}"
    heritage: "{{ $.Release.Service }}"
spec:
  template:
    spec:
      containers:
        - name: {{ .Values.name }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          image: {{ .Values.image.repo }}:{{ .Values.image.tag | default .Chart.AppVersion }}
          {{- if .Values.istioTerminationHack }}
          command: ["/bin/sh", "-c"]
          # The following hack does 2 things:
          # 1. Waits for the Istio proxy sidecar to be ready before continuing.
          # 2. Tells the istio proxy sidecar to exit once we're done - otherwise
          # it will keep running and the job will never complete - this is arguably not a bug,
          # since you don't _want_ your mesh proxy to quit normally.
          # For more details, see Istio bug: https://github.com/istio/istio/issues/11659
          # (this arguably isn't an Istio bug, but a Kube one, since you don't WANT containers in a Pod to be able to
          # terminate their own Pod's proxy)
          args:
            - |
              trap "curl --max-time 2 -s -f -XPOST http://127.0.0.1:15000/quitquitquit" EXIT
              while ! curl -s -f http://127.0.0.1:15020/healthz/ready; do sleep 1; done
              sleep 10 && python3 bootstrap.py
          {{- end }}
          env:
            - name: ENABLE_PKI_DIRECTGRANT
              value: {{ .Values.pki.directGrantEnable | quote }}
            - name: ENABLE_PKI_BROWSER
              value: {{ .Values.pki.browserEnable | quote }}
            - name: OPENTDF_EXTERNAL_URL
              value: {{ required "Please define the abacus host URL for redirects" .Values.externalUrl }}
            - name: KEYCLOAK_INTERNAL_URL
              value: {{ .Values.keycloak.hostname }}
            - name: keycloak_admin_username
              value: {{ .Values.keycloak.username }}
            {{- with .Values.keycloak.password }}
            - name: keycloak_admin_password
              value: {{ . }}
            {{- end }}
            - name: passwordUsers
              value: {{ .Values.keycloak.passwordUsers }}
            {{- with .Values.keycloak.clientId }}
            - name: CLIENT_ID
              value: {{ . }}
            {{- end }}
            {{- with .Values.keycloak.clientSecret }}
            - name: CLIENT_SECRET
              value: {{ . }}
            {{- end }}
            - name: realm
              value: {{ .Values.keycloak.realm }}
            - name: ATTRIBUTE_AUTHORITY_HOST
              value: {{ .Values.attributes.hostname }}
            - name: ENTITLEMENT_HOST
              value: {{ .Values.entitlements.hostname }}
            - name: ATTRIBUTES_CLIENT_ID
              value: {{ .Values.attributes.clientId }}
            - name: ATTRIBUTES_USERNAME
              value: {{ .Values.attributes.username }}
            - name: ATTRIBUTES_PASSWORD
              value: {{ .Values.attributes.password }}
            - name: ATTRIBUTES_REALM
              value: {{ .Values.attributes.realm }}
          {{- with .Values.secretRef }}
          envFrom:
            - secretRef:
                {{- toYaml . | nindent 16 }}
          {{- end }}
          volumeMounts:
            - name: keycloak-bootstrap-config-volume
              mountPath: /etc/virtru-config
      volumes:
        - name: keycloak-bootstrap-config-volume
          configMap:
            name: {{ include "keycloak-bootstrap.fullname" . }}-cm
      restartPolicy: Never
      {{ with .Values.image.pullSecret }}
      imagePullSecrets:
        - name: {{ . }}
      {{ end }}
  backoffLimit: {{ .Values.job.backoffLimit }}
