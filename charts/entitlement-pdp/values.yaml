# -- Sets the default number of pod replicas in the deployment.
# Ignored if `autoscaling.enabled` == true
replicaCount: 3

# Global values that may be overridden by a parent chart.
global:
  opentdf:
    common:
      # -- JSON passed to the deployment's `template.spec.imagePullSecrets`
      imagePullSecrets: []
      istio:
        # -- Enable istio ingress
        enabled: false
        ingress:
          # -- Allow traffic for specific hosts
          hosts: []
          # -- (string) Use an existing istio gateway
          # (format if in different namespace: namespace/gateway-name)
          existingGateway:
          # -- Name of istio gateway to create if not existing
          name: ""
          # -- Redirect http requests to https
          httpsRedirect: false

# Configure the container image to use in the deployment.
image:
  # -- The image selector, also called the 'image name' in k8s documentation
  # and 'image repository' in docker's guides.
  repo: ghcr.io/opentdf/entitlement-pdp
  # -- `Chart.AppVersion` will be used for image tag, override here if needed
  tag:
  # -- The container's `imagePullPolicy`
  pullPolicy: IfNotPresent

# -- JSON passed to the deployment's `template.spec.imagePullSecrets`.
# Overrides `global.opentdf.common.imagePullSecrets` when set
imagePullSecrets:

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

secret:
  # -- Creds or token needed to pull OPA policy bundle
  opaPolicyPullSecret: "YOUR_GHCR_PAT_HERE"

# -- Additional secrets. You can also add opa
secretRef:

# -- Where the opa config yaml is mounted
opaConfigMountPath: "/etc/opa/config"

# Ingress configuration.
ingress:
  # -- Enables the Ingress
  enabled: false
  # -- Ingress annotations
  annotations: {}
  # -- Ingress class to use.
  className: null
  # -- Map in the form:
  # [hostname]:
  #   [path]:
  #     pathType:    your-pathtype [default: "ImplementationSpecific"]
  #     serviceName: your-service  [default: `service.fullname`]
  #     servicePort: service-port  [default: `service.port` above]
  hosts: {}
  # -- Ingress TLS configuration
  tls: null

opaConfig:
  policy:
    # -- If `useStaticPolicy` is set to `true`, then an OPA config will be generated
    # that forces the use of a policy bundle that was built and packed into the `entitlement-pdp`
    # container at *build* time, and no policy bundle will be fetched dynamically from the registry
    # on startup.
    # This is not a desirable default, but it is useful in offline deployments.
    useStaticPolicy: false
    # -- Base URL to contact the policy bundle with
    OCIRegistryUrl: "https://ghcr.io"
    # -- Resource path to use to download bundle from configured service
    bundleRepo: "ghcr.io/opentdf/entitlement-pdp/entitlements-policybundle"
    # -- `bundleTag` will default to `.Chart.AppVersion` if unset
    bundleTag:

    # -- This will tell OPA to ignore TLS errors (bad cert, self-signed cert, etc)
    # when downloading an OCI policy bundle from an OCI registry.
    #
    # Unsuitable for production, used for testing with `localhost` registries
    allowInsecureTLS: false
    updatePolling:
      # -- Minimum amount of time to wait between bundle downloads
      minDelay: 60
      # -- Maximum amount of time to wait between bundle downloads
      maxDelay: 120
  # -- Any extra/additional OPA config defined here will be appended as-is,
  # as raw YAML to the OPA config file generated by the chart.
  extraConfigYaml:
    decision_logs:
      console: true
    # distributed_tracing:
    #   type: grpc
    #   address: opentelemetry-collector.otel.svc:4317
    #   service_name: entitlement-pdp-opa
    #   sample_percentage: 50
    #   encryption: "off"

config:
  # -- Port the server will listen on
  listenPort: 3355
  # -- External endpoint the server will be accessed from (used for OpenAPI endpoint serving)
  externalHost: ""
  # -- Enable verbose logging
  verbose: "false"
  # -- Disable emitting OpenTelemetry traces (avoids junk timeouts if environment has no OT collector)
  disableTracing: "false"
  # -- Open telemetry collector endpoint
  otlpCollectorEndpoint: "opentelemetry-collector.otel.svc:4317"
  # -- Path to opa config yaml
  opaConfigPath: "/etc/opa/config/opa-config.yaml"
