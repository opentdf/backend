# Sets the default number of pod replicas in the deployment.
# Ignored if autoscaling.enabled == true
replicaCount: 3

# Container image configuration.
image:
  # The image selector, also called the 'image name' in k8s documentation
  # and 'image repository' in docker's guides.
  name: opentdf/kas
  # The container's `imagePullPolicy`
  pullPolicy: IfNotPresent

# JSON passed to the deployment's template.spec.imagePullSecrets
secretName: "etheria-secrets"

imagePullSecrets: []

# Select a specific name for the resource, instead of the default, opentdf-claims
nameOverride: ""

# The fully qualified appname override
fullnameOverride: ""

labels:
  app: "kas"

# A service account to create
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# Values for the deployment spec.template.metadata.annotations field
podAnnotations: {}

# Values for deployment's spec.template.spec.securityContext
podSecurityContext: {}
  # fsGroup: 2000


# Values for deployment's spec.template.spec.containers.securityContext
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# Service configuation information.
service:
  # Service `spec.type`
  type: ClusterIP
  # Port to assign to the `http` port
  port: 8000

# Ingress configuration.
ingress:
  enabled: false
  annotations: {}
  hosts:
  - host: etheria.local
    paths:
    - /kas
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# Specify required limits for deploying this service to a pod.
# We usually recommend not to specify default resources and to leave this as a conscious
# choice for the user. This also increases chances charts run on environments with little
# resources, such as Minikube.
resources:
  limits:
    cpu: 400m
    memory: 256Mi
  requests:
    cpu: 100m
    memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Pod disruption budget
maxUnavailable: 1

endpoints:
  easHost: https://eas.NAMESPACE.svc.cluster.local/
  # TODO replace this with a template var instead of a hardcode when Keycloak charts are merged into opentdf/backend.
  oidcPubkeyEndpoint: http://keycloak-http:80

# Adds a container livenessProbe, if set.
livenessProbe:
  httpGet:
    path: /healthz?probe=liveness
    port: http

# Adds a container readinessProbe, if set.
readinessProbe:
  httpGet:
    path: /healthz?probe=readiness
    port: http
