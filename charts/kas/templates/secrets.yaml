{{- $cn := .Release.Name }}
{{- $kasRSA := genSelfSignedCertWithKey $cn (list) (list) 365 (genPrivateKey "rsa") }}
# Note that the Sprig template uses the P-256 EC curve - if this is something that matters to you, you shouldn't be using template-generated toy certs to begin with, and should supply your own.
{{- $kasEC := genSelfSignedCertWithKey $cn (list) (list) 365 (genPrivateKey "ecdsa") }}


# 1. If you gave us preexisting key pairs via a named Secret resource that already exists, we use that
# 2. If you gave us preexisting key pairs via named .Values.envConfig.xxx properties, we use that.
# 3. If you gave us none of the above, we use Sprig template funcs to generate throwaway key pairs and use those.
{{- if not .Values.externalEnvSecretName }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ (include "kas.secretName" . ) }}
  labels:
    {{- include "kas.labels" . | nindent 4 }}
    app.kubernetes.io/part-of: kas  
type: Opaque
data:

  {{- if .Values.envConfig.attrAuthorityCert }}
  ATTR_AUTHORITY_CERTIFICATE: |-
        {{ .Values.envConfig.attrAuthorityCert | b64enc }}
  {{- end }}
  KAS_EC_SECP256R1_CERTIFICATE: |
        {{ coalesce .Values.envConfig.ecCert $kasEC.Cert | b64enc }}
  KAS_CERTIFICATE: |
        {{ coalesce .Values.envConfig.cert $kasRSA.Cert | b64enc }}
  KAS_EC_SECP256R1_PRIVATE_KEY: |
        {{ coalesce .Values.envConfig.ecPrivKey $kasEC.Key | b64enc }}
  KAS_PRIVATE_KEY: |
        {{ coalesce .Values.envConfig.privKey $kasRSA.Key | b64enc }}
{{- end }}
