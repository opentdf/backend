# Optionally override the fully qualified name
fullnameOverride: ""

# Optionally override the name
nameOverride: ""


embedded:
  keycloak: true
  postgresql: true

bootstrapKeycloak: true

# Global values that may be overridden by a parent chart.
global:
  opentdf:
    common:
      # The cluster internal scheme + hostname for keycloak endpoint, oidcUrlPrefix used in constructing end urls.
      oidcInternalBaseUrl: http://keycloak-http
      # The url path (no preceding / ) to keycloak
      oidcUrlPath: auth
      # The external scheme + hostname to keycloak endpoint, oidcUrlPrefix used in constructing end urls.
      oidcExternalBaseUrl: http://localhost:65432
      # Any existing image pull secrets subcharts should use
      # e.g.
      # imagePullSecrets:
      #   - name: my-existing-ghcr-pullsecret
      #   - name: my-other-pullsecret
      imagePullSecrets: []
      keycloak:
        user: keycloakadmin
        password: mykeycloakpassword
      postgres:
        # postgres server's k8s name or global DNS for external server
        host: postgresql
        # postgres server port
        port: 5432
        # The database name within the given server
        database: tdf_database

secrets:
  opaPolicyPullSecret:
  oidcClientSecret:
  postgres:
    dbUser: postgres
    dbPassword: otdf-pgsql-admin
  keycloakBootstrap:
    clientSecret: 123-456
    attributes:
      username: user1
      password: testuser123


attributes:
  fullnameOverride: attributes
  secretRef: |-
    name: "{{ template "attributes.fullname" . }}-otdf-secret"
  ingress:
    enabled: false
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /$2
    className: nginx
    hosts:
      localhost: &pathsAttributes
        "/api/attributes(/|$)(.*)":
          pathType: Prefix
      host.docker.internal: *pathsAttributes
      opentdf.local: *pathsAttributes
      '': *pathsAttributes
entitlement-pdp:
  fullnameOverride: entitlement-pdp
  opaConfig:
    policy:
      # `Tilt` tries make docker image caching automagic, but it isn't particularly
      # smart about non-Docker OCI caches, so tell the PDP chart to use the default on-disk policy bundle
      # we create and pack into the image to work around this
      useStaticPolicy: true
  config:
    disableTracing: true
  secretRef: |-
    name: "{{ template "entitlement-pdp.fullname" . }}-otdf-secret"
entitlement-store:
  fullnameOverride: entitlement-store
  secretRef: |-
    name: "{{ template "entitlement-store.fullname" . }}-otdf-secret"
entitlements:
  fullnameOverride: entitlements
  secretRef: |-
    name: "{{ template "entitlements.fullname" . }}-otdf-secret"
  ingress:
    enabled: false
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /$2
    className: nginx
    hosts:
      localhost: &pathsEntitlements
        "/api/entitlements(/|$)(.*)":
          pathType: Prefix
      host.docker.internal: *pathsEntitlements
      opentdf.local: *pathsEntitlements
      '': *pathsEntitlements
entity-resolution:
  fullnameOverride: entity-resolution
  config:
    keycloak:
      legacy: true
kas:
  fullnameOverride: kas
  endpoints:
    attrHost: http://attributes:4020
    statsdHost: statsd
  envConfig:
    attrAuthorityCert:
    ecCert:
    cert:
    ecPrivKey:
    privKey:
  ingress:
    enabled: false
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /$2
    className: nginx
    hosts:
      localhost: &pathsKas
        "/api/kas(/|$)(.*)":
          pathType: Prefix
      host.docker.internal: *pathsKas
      opentdf.local: *pathsKas
      '': *pathsKas
  logLevel: DEBUG
  pdp:
    verbose: "true"
    disableTracing: "true"

keycloak:
  fullnameOverride: keycloak
  image:
    # Keycloak is a non-OpenTDF chart, but with an OpenTDF image
    repository: ghcr.io/opentdf/keycloak
    tag: main
    pullPolicy: IfNotPresent
  command:
    - "/opt/keycloak/bin/kc.sh"
    - "--verbose"
    - "start-dev"
  postgresql:
    enabled: false
  externalDatabase:
    database: keycloak_database
  extraEnv: |-
    - name: KC_LOG_LEVEL
      value: INFO
    - name: CLAIMS_URL
      value: http://entitlement-pdp:3355/entitlements
    - name: KC_DB
      value: postgres
    - name: KC_DB_URL_PORT
      value: "5432"
    - name: KC_HTTP_RELATIVE_PATH
      value: "/auth"
    - name: KC_HOSTNAME_STRICT_HTTPS
      value: "false"
    - name: KC_HOSTNAME_STRICT
      value: "false"
    - name: KC_HTTP_ENABLED
      value: "true"
    - name: KC_PROXY
      value: "edge"
    - name: JAVA_OPTS_APPEND
      value: -Djgroups.dns.query={{ include "keycloak.fullname" . }}-headless
  extraEnvFrom: |-
    - secretRef:
        name: "{{ include "keycloak.fullname" . }}-otdf-secret"
  ingress:
    enabled: false
    ingressClassName: nginx
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /auth/$2
    rules:
      - host: localhost
        paths: &paths
          - path: /auth(/|$)(.*)
            pathType: Prefix
      - host: host.docker.internal
        paths: *paths
      - host: opentdf.local
        paths: *paths
      - paths: *paths
        host: ''
    tls: []

keycloak-bootstrap:
  fullnameOverride: keycloak-bootstrap
  secretRef: |-
    name: "{{ template "keycloak-bootstrap.fullname" . }}-otdf-secret"
  keycloak:
    clientId: tdf-client
    realm: tdf

  attributes:
    hostname: http://attributes:4020
    realm: tdf
    clientId: dcr-test
    preloadedAuthorities:
    - https://example.com
    preloadedAttributes:
    - authority: https://example.com
      name: Classification
      rule: hierarchy
      state: published
      order:
      - TS
      - S
      - C
      - U
    - authority: https://example.com
      name: COI
      rule: allOf
      state: published
      order:
      - PRX
      - PRA
      - PRB
      - PRC
      - PRD
      - PRF

  entitlements:
    hostname: http://entitlements:4030
    realms:
    - name: tdf
      clientId: dcr-test
      username: user1
      password: testuser123
      preloadedClaims:
        alice_1234:
          - https://example.com/attr/Classification/value/C
          - https://example.com/attr/COI/value/PRD
        bob_1234:
          - https://example.com/attr/Classification/value/C
          - https://example.com/attr/COI/value/PRC
        browsertest:
          - https://example.com/attr/Classification/value/C
          - https://example.com/attr/COI/value/PRA
        client_x509:
          - https://example.com/attr/Classification/value/S
          - https://example.com/attr/COI/value/PRX
        dcr-test:
          - https://example.com/attr/Classification/value/C
          - https://example.com/attr/COI/value/PRF
        service-account-tdf-client:
          - https://example.com/attr/Classification/value/C
          - https://example.com/attr/COI/value/PRB
        tdf-client:
          - https://example.com/attr/Classification/value/S
          - https://example.com/attr/COI/value/PRX
          - https://example.com/attr/Env/value/CleanRoom
        tdf-user:
          - https://example.com/attr/Classification/value/C
          - https://example.com/attr/COI/value/PRX
        user1:
          - https://example.com/attr/Classification/value/S
          - https://example.com/attr/COI/value/PRX

postgresql:
  #  configuration https://github.com/bitnami/charts/tree/master/bitnami/postgresql/#parameters
  fullnameOverride: postgresql
  image:
    debug: true
  existingSecret: >
    {{ include "postgresql.primary.fullname" . }}-otdf-secret
  initdbUser: postgres
  initdbScriptsSecret: >
    {{ include "postgresql.primary.fullname" . }}-initdb-secret
