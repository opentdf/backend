# Sets the default number of pod replicas in the deployment.
# Ignored if autoscaling.enabled == true
replicaCount: 1

# Container image configuration.
image:
  # The container's `imagePullPolicy`
  pullPolicy: IfNotPresent
  # The image selector, also called the 'image name' in k8s documentation
  # and 'image repository' in docker's guides.
  name: opentdf/entitlements

# JSON passed to the deployment's template.spec.imagePullSecrets
imagePullSecrets: []

# Select a specific name for the resource, instead of the default, opentdf-claims
nameOverride: ""

# The fully qualified appname override
fullnameOverride: ""

# A service account to create
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# Values for the deployment spec.template.metadata.annotations field
podAnnotations: {}

# Values for deployment's spec.template.spec.securityContext
podSecurityContext: {}
  # fsGroup: 2000

# Values for deployment's spec.template.spec.containers.securityContext
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# JSON locating the secret to pull environment variables from
# Notably, this file should include the following environemnt variable definitions:
#     POSTGRES_PASSWORD: Password corresponding to postgres.user below
secretRef:
  name: entitlements-secrets

# Service configuation information.
service:
  # Service `spec.type`
  type: ClusterIP
  # Port to assign to the `http` port
  port: 4030

# Ingress configuration.
ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /v1/entity/attribute
        - path: /v1/attribute
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# Specify required limits for deploying this service to a pod.
# We usually recommend not to specify default resources and to leave this as a conscious
# choice for the user. This also increases chances charts run on environments with little
# resources, such as Minikube.
resources: {}

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Configuration for the database backend
postgres:
  # postgres server's k8s name or global DNS for external server
  host: localhost
  # postgres server port
  port: 5432
  # Must be a postgresql user with the tdf_entitlement_manager role
  user: tdf_entitlement_manager
  # The database name within the given server
  database: tdf_database
  # The entitlement schema
  schema: tdf_entitlement
