// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "OpenTDF",
            "url": "https://www.opentdf.io"
        },
        "license": {
            "name": "BSD 3-Clause",
            "url": "https://opensource.org/licenses/BSD-3-Clause"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/entitlements": {
            "post": {
                "description": "Provide entity identifiers to the entitlement PDP\nand receive an array of attribute sets for each entity involved in the entitlement decisions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Entitlements"
                ],
                "summary": "Request an entitlements set from the PDP",
                "parameters": [
                    {
                        "description": "List of primary and secondary entity identifiers to entitle",
                        "name": "Request\"",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.EntitlementsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.EntityEntitlement"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/healthz": {
            "get": {
                "tags": [
                    "Service Health"
                ],
                "summary": "Check service status",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.EntitlementsRequest": {
            "description": "Request containing entity identifiers seeking entitlement. At least one entity (primary requestor) is required The Entitlements PDP is expected to be invoked directly by an identity provider and with contextual entity information attested to and possessed by that identity provider",
            "type": "object",
            "properties": {
                "entitlement_context_obj": {
                    "description": "Optional, may be left empty.\nA free-form, (valid, escaped) JSON object in string format, containing any additional IdP/input context around and from\nthe entity authentication process. This JSON object will be checked as a valid, generic JSON document,\nand then passed to the PDP engine as-is, as an input document.",
                    "type": "string",
                    "example": "{\"somekey\":\"somevalue\"}"
                },
                "primary_entity_id": {
                    "description": "The identifier for the primary entity seeking entitlement.\nFor PE auth, this will be a PE ID. For NPE/direct grant auth, this will be an NPE ID.",
                    "type": "string",
                    "example": "bc03f40c-a7af-4507-8198-d5334e2823e6"
                },
                "secondary_entity_ids": {
                    "description": "Optional, may be left empty.\nFor PE auth, this will be one or more NPE IDs (client-on-behalf-of-user).\nFor NPE/direct grant auth,\nthis may be either empty (client-on-behalf-of-itself) or populated with one\nor more NPE IDs (client-on-behalf-of-other-clients, aka chaining flow)",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "4f6636ca-c60c-40d1-9f3f-015086303f74"
                    ]
                }
            }
        },
        "handlers.EntityAttribute": {
            "description": "Represents a single entity attribute.",
            "type": "object",
            "properties": {
                "attribute": {
                    "description": "Attribute, in URI format, e.g.: \"https://example.org/attr/Classification/value/COI\"",
                    "type": "string",
                    "example": "https://example.org/attr/OPA/value/AddedByOPA"
                },
                "displayName": {
                    "description": "Optional display name for the attribute",
                    "type": "string",
                    "example": "Added By OPA"
                }
            }
        },
        "handlers.EntityEntitlement": {
            "type": "object",
            "properties": {
                "entity_attributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.EntityAttribute"
                    }
                },
                "entity_identifier": {
                    "type": "string",
                    "example": "bc03f40c-a7af-4507-8198-d5334e2823e6"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.0.1",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "entitlement-pdp",
	Description:      "An implementation of a Policy Decision Point",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
