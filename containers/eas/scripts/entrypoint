#!/bin/bash

START_APP_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null && pwd)"
PROJECT_ROOT="$(cd "${START_APP_DIR}/../../" >/dev/null && pwd)"
export PATH="$PATH:$PROJECT_ROOT/scripts"

if [[ $POSTGRES_HOST ]]; then
  monolog INFO "EAS.entrypoint: Waiting for postgres..."
  until pg_isready --host=$POSTGRES_HOST --port=$POSTGRES_PORT --dbname=$POSTGRES_DB --username $POSTGRES_USER --timeout=0; do
    sleep 0.2
  done
  monolog INFO "EAS.entrypoint: postgres found, continuing"
fi

if [ -z "$EAS_CERTIFICATE" ]; then
  monolog INFO "EAS.entrypoint: Waiting for environment..."
  CERTS_DIR="$PROJECT_ROOT/certs"
  KEYCLOAK_PUBLIC_KEY="${KEYCLOAK_PUBLIC_KEY:-$CERTS_DIR/keycloak-public.pem}"
  CA_CERT_PATH="${CA_CERT_PATH:-$CERTS_DIR/ca.crt}"
  monolog INFO "Waiting for certificate files to appear in [$CERTS_DIR]"
  # NOTE KEYCLOAK_PUBLIC_KEY is not generated by genkeys
  wait-for-file "$CERTS_DIR/.env" "${CA_CERT_PATH}"
  # NOTE This is not best practice, but useful for development
  # Instead, pass in the environment from outside this script
  monolog WARN "EAS.entrypoint: Loading certificate from ${CERTS_DIR}/.env"
  . "$CERTS_DIR/.env"
else
  monolog INFO "EAS.entrypoint: Not loading test cert environment"
fi

export EAS_CERTIFICATE
export EAS_PRIVATE_KEY
export KAS_EC_SECP256R1_CERTIFICATE
export KAS_CERTIFICATE
export KEYCLOAK_PUBLIC_KEY
export CA_CERT_PATH

gunicorn --statsd-host "${STATSD_HOST}:${STATSD_PORT}" --statsd-prefix "service.eas" --config "gunicorn.conf.py" --timeout "5" --bind "0.0.0.0:${GUNICORN_PORT}" wsgi:app
