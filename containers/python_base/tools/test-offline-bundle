#!/usr/bin/env bash
#  Validate the current exported offline bundle
#    * Makes sure the last run of build-offline-bundle completed successfully
#    * Makes sure it is up to date (check for git HEAD digest match)
#    * TK Loads images into docker agent
#    * TK Helm installs into a kind cluster and runs KUTTL test

APP_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null && pwd)"
PROJECT_ROOT="$(git rev-parse --show-toplevel)"
export PATH="$PATH:$APP_DIR"

monolog TRACE "Running [$0${1+ }$*]"

: "${LOCAL_TOOL:="kind"}"
export LOCAL_TOOL

if ! cd "$PROJECT_ROOT"; then
  monolog ERROR "Unable to find project root [${PROJECT_ROOT}] from APP_DIR=[${APP_DIR}]"
  exit 1
fi


if ! diff build/export/{CURRENT,COMPLETED}; then
  monolog ERROR "build-offline-bundle did not complete successfully"
  exit 1
fi

suffix="$(<build/export/COMPLETED)"
monolog TRACE "docker load -i [build/export/opentdf-service-images-${suffix}.tar]"
if ! docker load -i "build/export/opentdf-service-images-${suffix}.tar"; then
  monolog ERROR "offline bundle failed to load"
  exit 1
fi


kind_prefix="build/export/third-party-image-kind-${suffix}"
monolog TRACE "docker load kind from [${kind_prefix}.tar]"
if ! docker load -i "${kind_prefix}.tar" ; then
  monolog ERROR "offline bundle failed to load"
  exit 1
fi
docker tag "$(<"${kind_prefix}".meta)" kindest/node:offline

export ETHERIA_TAG="offline-${suffix}"

if ! deployments/local/start.sh --offline; then
  monolog ERROR "offline services failed to install"
  exit 1
fi

# TODO Validate with KUTTL
