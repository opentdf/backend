version: "3.8"
networks:
  internal-network:
    internal: true
volumes:
  carbon-volume:
services:
  statsd:
    image: statsd/statsd
    depends_on:
      - carbon
    links:
      - carbon:graphite
    ports:
      - 8125:8125/udp
      - 8126:8126
    networks:
      - internal-network
  graphite-web:
    image: dockerana/graphite
    depends_on:
      - carbon
    ports:
      - 8000:8000
    volumes:
      - carbon-volume:/opt/graphite
  carbon:
    image: dockerana/carbon
    ports:
      - 2003:2003
      - 2004:2004
      - 7002:7002
    networks:
      - internal-network
    volumes:
      - carbon-volume:/opt/graphite
  aa:
    build:
      args:
        - PY_VERSION=${PY_VERSION:-3.12}
      context: ../containers/attributes
    depends_on:
      - statsd
      - migration
    environment:
      - STATSD_HOST=statsd
      - STATSD_PORT=8125
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=tdf_attribute_manager
      - POSTGRES_PASSWORD=myPostgresPassword
      - POSTGRES_DATABASE=tdf_database
      - POSTGRES_SCHEMA=tdf_attribute
    ports:
      - 4020:4020
    networks:
      - internal-network
    restart: on-failure
    healthcheck:
      test: "wget -O /dev/null -T 1 localhost:4020/healthz?probe=liveness"
      interval: "60s"
      timeout: "2s"
      start_period: "5s"
      retries: 1
  eas:
    build:
      args:
        - PY_VERSION=${PY_VERSION:-3.12}
      context: ../containers/entitlement_store
    depends_on:
      - statsd
      - migration
    environment:
      - KAS_EC_SECP256R1_CERTIFICATE
      - KAS_CERTIFICATE
      - STATSD_HOST=statsd
      - STATSD_PORT=8125
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=tdf_entitlement_reader
      - POSTGRES_PASSWORD=myPostgresPassword
      - POSTGRES_DATABASE=tdf_database
      - POSTGRES_SCHEMA=tdf_entitlement
    ports:
      - 4010:4010
    networks:
      - internal-network
    restart: on-failure
    healthcheck:
      test: "wget -O /dev/null -T 1 localhost:4010/healthz?probe=liveness"
      interval: "60s"
      timeout: "2s"
      start_period: "5s"
      retries: 1
  kas:
    build:
      args:
        - PY_VERSION=${PY_VERSION:-3.12}
      context: ../containers/kas
      dockerfile: Dockerfile
    depends_on:
      - statsd
      - aa
    environment:
      - ATTR_AUTHORITY_HOST=http://aa:4020
      - ATTR_AUTHORITY_CERTIFICATE
      - FLASK_DEBUG=True
      - FLASK_TESTING=True
      - STATSD_HOST=statsd
      - STATSD_PORT=8125
      - KAS_EC_SECP256R1_PRIVATE_KEY
      - KAS_EC_SECP256R1_CERTIFICATE
      - KAS_PRIVATE_KEY
      - KAS_CERTIFICATE
      - LOGLEVEL=INFO
      - MONOLOG_LEVEL
      - GUNICORN_THREADS=1
      - GUNICORN_WORKERS=1
    expose:
      - 8000
    networks:
      - internal-network
    # volumes:
    #   - ../certs:/certs
    restart: on-failure
    healthcheck:
      test: "wget -O /dev/null -T 1 localhost:8000/healthz?probe=liveness"
      interval: "60s"
      timeout: "2s"
      start_period: "5s"
      retries: 1
  performance-test:
    build:
      args:
        - PY_OSS_VERSION=${PY_OSS_VERSION:-==1.1.1}
        - PY_VERSION=${PY_VERSION:-3.12}
      context: ..
      dockerfile: performance-test/Dockerfile
    depends_on:
      - aa
      - eas
      - kas
      - graphite-web
    environment:
      - EAS_ENDPOINT=http://eas:4010
      - MONOLOG_LEVEL
    networks:
      - internal-network
  postgres:
    image: postgres:12
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=master_user
      - POSTGRES_PASSWORD=master_password
      - POSTGRES_DB=tdf_database
      - POSTGRES_HOST_AUTH_METHOD=trust
    networks:
      - internal-network
  migration:
    build:
      args:
        - PY_OSS_VERSION=${PY_OSS_VERSION:-==1.1.1}
        - PY_VERSION=${PY_VERSION:-3.12}
      context: ..
      dockerfile: containers/migration/Dockerfile
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=master_user
      - POSTGRES_PASSWORD=master_password
      - POSTGRES_DATABASE=tdf_database
    depends_on:
      - postgres
    networks:
      - internal-network
