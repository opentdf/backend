realms:
- name: master
  # if we want any additional stuff in the master realm
  clients:
  - payload:
      clientId: abacus-web
      publicClient: 'true'
      standardFlowEnabled: 'true'
      clientAuthenticatorType: client-secret
      serviceAccountsEnabled: 'true'
      protocol: openid-connect
      redirectUris:
      - "{{ externalUrl }}/*"
      webOrigins:
      - "+"
    mappers:
    - protocol: openid-connect
      config:
        id.token.claim: false
        access.token.claim: true
        included.custom.audience: "tdf-entitlement"
      name: Virtru "tdf-entitlements" Audience Mapper
      protocolMapper: oidc-audience-mapper
    - protocol: openid-connect
      config:
        id.token.claim: false
        access.token.claim: true
        included.custom.audience: "tdf-attributes"
      name: Virtru "tdf-attributes" Audience Mapper
      protocolMapper: oidc-audience-mapper
- name: tdf
  payload:
    realm: tdf
    enabled: true
  clients:
  - payload:
      clientId: tdf-client
      directAccessGrantsEnabled: 'true'
      clientAuthenticatorType: client-secret
      secret: 123-456
      serviceAccountsEnabled: 'true'
      publicClient: 'false'
      redirectUris:
      - "{{ hostname }}/auth/admin/tdf-client/console"
      attributes:
        user.info.response.signature.alg: RS256
    mappers: # we could pull some of these out into a mappers.yaml to reuse them and avoid repeated code
    - protocol: openid-connect
      config:
        id.token.claim: 'false'
        access.token.claim: 'false'
        userinfo.token.claim: 'true'
        remote.parameters.username: 'true'
        remote.parameters.clientid: 'true'
        client.publickey: X-VirtruPubKey
        claim.name: tdf_claims
      name: Virtru OIDC UserInfo Mapper
      protocolMapper: virtru-oidc-protocolmapper
    - protocol: openid-connect
      config:
        id.token.claim: 'true'
        access.token.claim: 'true'
        userinfo.token.claim: 'false'
        remote.parameters.username: 'true'
        remote.parameters.clientid: 'true'
        client.publickey: X-VirtruPubKey
        claim.name: tdf_claims
      name: Virtru OIDC Auth Mapper
      protocolMapper: virtru-oidc-protocolmapper
  - payload:
      clientId: browsertest
      publicClient: 'true'
      standardFlowEnabled: 'true'
      baseUrl: "{{ externalUrl }}/"
      protocol: openid-connect
      redirectUris:
      - "{{ externalUrl }}/*"
      webOrigins:
      - "+"
      attributes:
        user.info.response.signature.alg: RS256
    mappers:
    - protocol: openid-connect
      config:
        id.token.claim: 'false'
        access.token.claim: 'false'
        userinfo.token.claim: 'true'
        remote.parameters.username: 'true'
        remote.parameters.clientid: 'true'
        client.publickey: X-VirtruPubKey
        claim.name: tdf_claims
      name: Virtru OIDC UserInfo Mapper
      protocolMapper: virtru-oidc-protocolmapper
    - protocol: openid-connect
      config:
        id.token.claim: 'true'
        access.token.claim: 'true'
        userinfo.token.claim: 'false'
        remote.parameters.username: 'true'
        remote.parameters.clientid: 'true'
        client.publickey: X-VirtruPubKey
        claim.name: tdf_claims
      name: Virtru OIDC Auth Mapper
      protocolMapper: virtru-oidc-protocolmapper
  - payload:
      clientId: exchange-target
      directAccessGrantsEnabled: 'true'
      clientAuthenticatorType: client-secret
      secret: '12345678'
      serviceAccountsEnabled: 'true'
      publicClient: 'false'
      redirectUris:
      - "{{ externalUrl }}/*"
      attributes:
        user.info.response.signature.alg: RS256
    mappers:
    - protocol: openid-connect
      config:
        id.token.claim: 'false'
        access.token.claim: 'false'
        userinfo.token.claim: 'true'
        remote.parameters.username: 'true'
        remote.parameters.clientid: 'true'
        client.publickey: X-VirtruPubKey
        claim.name: tdf_claims
      name: Virtru OIDC UserInfo Mapper
      protocolMapper: virtru-oidc-protocolmapper
    - protocol: openid-connect
      config:
        id.token.claim: 'true'
        access.token.claim: 'true'
        userinfo.token.claim: 'false'
        remote.parameters.username: 'true'
        remote.parameters.clientid: 'true'
        client.publickey: X-VirtruPubKey
        claim.name: tdf_claims
      name: Virtru OIDC Auth Mapper
      protocolMapper: virtru-oidc-protocolmapper
  - payload:
      clientId: dcr-test
      secret: 123-456
      publicClient: 'true'
      standardFlowEnabled: 'true'
      clientAuthenticatorType: client-secret
      serviceAccountsEnabled: 'true'
      baseUrl: "{{ externalUrl }}"
      protocol: openid-connect
      redirectUris:
      - "{{ externalUrl }}/*"
      webOrigins:
      - "+"
    mappers:
    - protocol: openid-connect
      config:
        id.token.claim: false
        access.token.claim: true
        included.custom.audience: "tdf-entitlement"
      name: Virtru "tdf-entitlements" Audience Mapper
      protocolMapper: oidc-audience-mapper
    - protocol: openid-connect
      config:
        id.token.claim: false
        access.token.claim: true
        included.custom.audience: "tdf-attributes"
      name: Virtru "tdf-attributes" Audience Mapper
      protocolMapper: oidc-audience-mapper
    - protocol: openid-connect
      config:
        id.token.claim: 'false'
        access.token.claim: 'false'
        userinfo.token.claim: 'true'
        remote.parameters.username: 'true'
        remote.parameters.clientid: 'true'
        client.publickey: X-VirtruPubKey
        claim.name: tdf_claims
      name: Virtru OIDC UserInfo Mapper
      protocolMapper: virtru-oidc-protocolmapper
    - protocol: openid-connect
      config:
        id.token.claim: 'true'
        access.token.claim: 'true'
        userinfo.token.claim: 'false'
        remote.parameters.username: 'true'
        remote.parameters.clientid: 'true'
        client.publickey: X-VirtruPubKey
        claim.name: tdf_claims
      name: Virtru OIDC Auth Mapper
      protocolMapper: virtru-oidc-protocolmapper
    - protocol: openid-connect
      config:
        id.token.claim: 'true'
        access.token.claim: 'true'
        userinfo.token.claim: 'true'
        user_workload.namespace: default
        user_workload.parentid: spiffe://example.org/ns/spire/sa/spire-agent
        user_workload.selectors: k8s:pod-label:tdfdatacleanroom:enabled, k8s:ns:default
      name: DCR Spire Registration Mapper
      protocolMapper: virtru-spire-protocolmapper
  - payload:
      clientId: tdf-entitlement
      publicClient: 'true'
      standardFlowEnabled: 'true'
      fullScopeAllowed: 'false'
      baseUrl: "{{ externalUrl }}/"
      protocol: openid-connect
      redirectUris:
      - "{{ externalUrl }}/*"
      webOrigins:
      - "+"
      attributes:
        user.info.response.signature.alg: RS256
    mappers:
    - protocol: openid-connect
      config:
        id.token.claim: 'false'
        access.token.claim: 'false'
        userinfo.token.claim: 'true'
        remote.parameters.username: 'true'
        remote.parameters.clientid: 'true'
        client.publickey: X-VirtruPubKey
        claim.name: tdf_claims
      name: Virtru OIDC UserInfo Mapper
      protocolMapper: virtru-oidc-protocolmapper
    - protocol: openid-connect
      config:
        id.token.claim: 'true'
        access.token.claim: 'true'
        userinfo.token.claim: 'false'
        remote.parameters.username: 'true'
        remote.parameters.clientid: 'true'
        client.publickey: X-VirtruPubKey
        claim.name: tdf_claims
      name: Virtru OIDC Auth Mapper
      protocolMapper: virtru-oidc-protocolmapper
  - payload:
      clientId: tdf-attributes
      publicClient: 'true'
      standardFlowEnabled: 'true'
      fullScopeAllowed: 'false'
      baseUrl: "{{ externalUrl }}/"
      protocol: openid-connect
      redirectUris:
      - "{{ externalUrl }}/*"
      webOrigins:
      - "+"
      attributes:
        user.info.response.signature.alg: RS256
    mappers:
    - protocol: openid-connect
      config:
        id.token.claim: 'false'
        access.token.claim: 'false'
        userinfo.token.claim: 'true'
        remote.parameters.username: 'true'
        remote.parameters.clientid: 'true'
        client.publickey: X-VirtruPubKey
        claim.name: tdf_claims
      name: Virtru OIDC UserInfo Mapper
      protocolMapper: virtru-oidc-protocolmapper
    - protocol: openid-connect
      config:
        id.token.claim: 'true'
        access.token.claim: 'true'
        userinfo.token.claim: 'false'
        remote.parameters.username: 'true'
        remote.parameters.clientid: 'true'
        client.publickey: X-VirtruPubKey
        claim.name: tdf_claims
      name: Virtru OIDC Auth Mapper
      protocolMapper: virtru-oidc-protocolmapper
  - payload:
      clientId: tdf-client
      standardFlowEnabled: 'true'
      fullScopeAllowed: 'false'
      protocol: openid-connect
      webOrigins:
      - "+"
      attributes:
        user.info.response.signature.alg: RS256
    mappers:
    - protocol: openid-connect
      config:
        id.token.claim: 'false'
        access.token.claim: 'false'
        userinfo.token.claim: 'true'
        remote.parameters.username: 'true'
        remote.parameters.clientid: 'true'
        client.publickey: X-VirtruPubKey
        claim.name: tdf_claims
      name: Virtru OIDC UserInfo Mapper
      protocolMapper: virtru-oidc-protocolmapper
    - protocol: openid-connect
      config:
        id.token.claim: 'true'
        access.token.claim: 'true'
        userinfo.token.claim: 'false'
        remote.parameters.username: 'true'
        remote.parameters.clientid: 'true'
        client.publickey: X-VirtruPubKey
        claim.name: tdf_claims
      name: Virtru OIDC Auth Mapper
      protocolMapper: virtru-oidc-protocolmapper
    - protocol: openid-connect
      config:
        id.token.claim: false
        access.token.claim: true
        included.custom.audience: "tdf-attributes"
      name: Virtru "tdf-attributes" Audience Mapper
      protocolMapper: oidc-audience-mapper
  
  users:
  - payload:
      username: Alice_1234
      enabled: true
  - payload:
      username: Bob_1234
      enabled: true
  - payload:
      username: john
      enabled: true
  - payload:
      username: user1
      enabled: true
      credentials:
      - value: testuser123
        type: password
    roles:
    - view-clients
    - view-users
  - payload:
      username: user2
      enabled: true
      credentials:
      - value: testuser123
        type: password
    roles:
    - view-clients
    - view-users
  - payload:
      username: testuser@virtru.com
      enabled: true
      credentials:
      - value: testuser123
        type: password
    roles:
    - view-clients
    - view-users