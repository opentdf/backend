kas:
  ingress:
    enabled: true
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /$2
    className: nginx
    hosts:
      localhost: &paths
        "/api/kas(/|$)(.*)":
          pathType: Prefix
      host.docker.internal: *paths

keycloak:
  extraEnv: |
    - name: CLAIMS_URL
      value: http://opentdf-entitlement-pdp:3355/entitlements
    - name: JAVA_OPTS_APPEND
      value: -Dkeycloak.profile=preview -Dkeycloak.profile.feature.token_exchange=enabled -Djgroups.dns.query={{ include "keycloak.fullname" . }}-headless
    - name: KC_DB
      value: postgres
    - name: KC_DB_URL_HOST
      value: opentdf-postgresql
    - name: KC_DB_URL_DATABASE
      value: keycloak_database
    - name: KC_DB_URL_PORT
      value: "5432"
    - name: KC_HOSTNAME
      value: "localhost:65432"
    - name: KC_HOSTNAME_ADMIN
      value: "localhost:65432"
    - name: KC_HOSTNAME_STRICT
      value: "false"
    - name: KC_HOSTNAME_STRICT_HTTPS
      value: "false"
    - name: KC_HTTP_ENABLED
      value: "true"
    - name: KC_HTTP_RELATIVE_PATH
      value: "/auth"
    - name: KC_PROXY
      value: "edge"
    - name: KEYCLOAK_LOGLEVEL
      value: INFO
    - name: KEYCLOAK_PROXY_ADDRESS_FORWARDING
      value: "true"
    - name: X509_CA_BUNDLE
      value: /etc/x509/https/ca.crt

  ingress:
    enabled: true
    ingressClassName: nginx
    servicePort: https
    rules:
      - # Ingress host
        host: "keycloak-http"
        # Paths for the host
        paths:
          - path: /
            pathType: Prefix
    annotations:
      kubernetes.io/tls-acme: "true"
      ingress.kubernetes.io/affinity: cookie
      nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
      nginx.ingress.kubernetes.io/proxy-ssl-secret: "default/x509-secret"
      nginx.ingress.kubernetes.io/proxy-ssl-verify: "off"
      nginx.ingress.kubernetes.io/proxy-ssl-verify-depth: "2"
      nginx.ingress.kubernetes.io/auth-tls-secret: "default/x509-secret"
      nginx.ingress.kubernetes.io/auth-tls-verify-client: "optional"
      nginx.ingress.kubernetes.io/auth-tls-verify-depth: "2"
      nginx.ingress.kubernetes.io/auth-tls-pass-certificate-to-upstream: "true"

    hosts:
      - keycloak-http
    tls:
      - hosts:
          - "keycloak-http"
        secretName: x509-secret

  extraVolumes: |
    - name: x509
      secret:
        secretName : x509-secret
  extraVolumeMounts: |
    - name: x509
      mountPath: /etc/x509/https
  startupScripts:
    keycloak.cli: |
      embed-server --server-config=standalone-ha.xml --std-out=echo
      batch
      /subsystem=keycloak-server/spi=x509cert-lookup:write-attribute(name=default-provider, value="nginx")
      /subsystem=keycloak-server/spi=x509cert-lookup/provider=default:remove
      /subsystem=keycloak-server/spi=x509cert-lookup/provider=nginx:add(enabled=true,properties={sslClientCert => "ssl-client-cert", sslCertChainPrefix => "USELESS",     certificateChainLength => "2"})
      /subsystem=logging/logger=org.keycloak.authentication.authenticators.x509/:add(category=org.keycloak.authentication.authenticators.x509,level=TRACE)
      /subsystem=logging/logger=org.keycloak.services.x509/:add(category=org.keycloak.services.x509,level=TRACE)
      /subsystem=logging/logger=com.virtru.keycloak.AttributeOIDCProtocolMapper/:add(category=com.virtru.keycloak.AttributeOIDCProtocolMapper,level=TRACE)
      run-batch
      stop-embedded-server
