name: Build Backend
env:
  KEYCLOAK_BASE_IMAGE: ghcr.io/opentdf/keycloak-multiarch-base
  CONTAINER_ARCHS: linux/amd64,linux/arm64

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - main
jobs:
  config:
    runs-on: ubuntu-latest
    container:
      image: quay.io/helmpack/chart-testing:latest
    outputs:
      KEYCLOAK_BASE_VERSION: ${{ steps.keycloak-base-version.outputs.KEYCLOAK_BASE_VERSION }}
      KEYCLOAK_OTDF_VERSION: ${{ steps.keycloak-otdf-version.outputs.KEYCLOAK_OTDF_VERSION }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Select keycloak base version
        run: echo '::set-output name=KEYCLOAK_BASE_VERSION::'$(cut -d- -f1 <containers/keycloak-protocol-mapper/VERSION)
        id: keycloak-base-version
      - name: Set output modified image version
        run: echo '::set-output name=KEYCLOAK_OTDF_VERSION::'$(<containers/keycloak-protocol-mapper/VERSION)
        id: keycloak-otdf-version

  keycloak-image-base:
    # We're literally building upstream Keycloak as-is
    # and we don't need to rebuild unless there's a major Keycloak version bump
    # so at least skip this for non-main builds
    runs-on: ubuntu-latest
    needs:
      - config
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout upstream Keycloak image repo
        uses: actions/checkout@v2
        with:
          repository: 'keycloak/keycloak-containers'
          ref: ${{ needs.config.outputs.KEYCLOAK_BASE_VERSION }}
      - name: Set up QEMU (required for crossbuild)
        uses: docker/setup-qemu-action@v1
      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/opentdf/keycloak-multiarch-base
          tags: |
            type=ref,event=branch
            type=sha
            type-raw,value=${{ needs.config.outputs.KEYCLOAK_OTDF_VERSION }}
      - name: Set up Docker BuildX
        uses: docker/setup-buildx-action@v1
        with:
          install: true
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish upstream Keycloak base image as multi-arch image
        uses: docker/build-push-action@v2
        with:
          context: ./server
          file: ./server/Dockerfile
          platforms: ${{ env.CONTAINER_ARCHS }}
          push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && github.repository == 'opentdf/backend' }}
          tags: ${{ steps.meta.outputs.tags }}

  custom-keycloak-image:
    runs-on: ubuntu-latest
    needs:
      - config
      - keycloak-image-base
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v2
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/opentdf/keycloak
          tags: |
            type=ref,event=branch
            type=sha
            type-raw,value=${{ needs.config.outputs.KEYCLOAK_OTDF_VERSION }}
      - name: Set up QEMU (required for crossbuild)
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: publish
        uses: docker/build-push-action@v2
        with:
          build-args: |-
            MAVEN_VERSION=3.8.4
            JDK_VERSION=11
            CONTAINER_REGISTRY=ghcr.io
            KEYCLOAK_BASE_VERSION=${{ needs.config.outputs.KEYCLOAK_BASE_VERSION }}
            KEYCLOAK_BASE_IMAGE=${{ needs.config.outputs.KEYCLOAK_BASE_IMAGE }}
          context: ./containers/keycloak-protocol-mapper
          platforms: ${{ env.CONTAINER_ARCHS }}
          push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && github.repository == 'opentdf/backend' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
