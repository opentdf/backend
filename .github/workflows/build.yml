name: Build Backend
on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - main
jobs:
  # helm-lint-test:
  #   runs-on: ubuntu-latest
  #   container:
  #     image: quay.io/helmpack/chart-testing:latest
  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0

  #     - name: Lint
  #       run: ct lint --target-branch main --all charts/

  #     - name: Render Templates
  #       run: |
  #         cd charts
  #         for d in */ ; do
  #             if [ -f "$d/Chart.yaml" ]; then
  #               echo "Rendering Helm chart $d to validate defaults..."
  #               helm template "$d"
  #             fi
  #         done

  # scriptcheck:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: 🦪 ✔ 🧼🧼🧼
  #       run: docker run --rm -v "$PWD:/mnt" --workdir "/mnt" "koalaman/shellcheck:v0.8.0" --color=always tools/*
  #     - name: 🦪 ✅ 🦇🦇🦇
  #       run: docker run --rm -v "$PWD:/mnt" --workdir "/mnt" bats/bats:1.5.0 tools/*.bats

  # unittest:
  #   runs-on: ubuntu-latest
  #   needs:
  #     - scriptcheck
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: "🐍 KAS Core Pytest"
  #       run: docker run --rm -v "$PWD:/mnt" --workdir "/mnt" "python:3.9" tools/monotest containers/kas/kas_core
  #     - name: "🐍 KAS App Pytest"
  #       run: docker run --rm -v "$PWD:/mnt" --workdir "/mnt" "python:3.9" tools/monotest containers/kas/kas_app

  build-base:
    runs-on: ubuntu-latest
    # needs:
    #   - unittest
    #   - helm-lint-test
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and export
        uses: docker/build-push-action@v2
        with:
          context: ./containers/python_base
          tags: opentdf/tdf-python-base:3.9
          outputs: type=docker,dest=/tmp/tdf-python-base.tar
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: tdf-python-base
          path: /tmp/tdf-python-base.tar

  build-and-publish:
    needs:
      - build-base
    runs-on: ubuntu-latest
    strategy:
      matrix:
        repo:
          - kas
          - attribute-authority
          - entitlement
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: tdf-python-base
          path: /tmp
      - name: Load image
        run: |-
          docker load --input /tmp/tdf-python-base.tar
          docker image ls -a
      - uses: actions/checkout@v2
      - name: publish
        uses: docker/build-push-action@v2
        with:
          context: ./containers/${{ matrix.repo }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && github.repository == 'opentdf/backend' }}
          registry: docker.pkg.github.com
          repository: opentdf/tdf-${{ matrix.repo }}
          tag_with_sha: true
          tags: opentdf/tdf-${{ matrix.repo }}:${{ github.sha }}
