name: Build ubi9 Images
env:
  CONTAINER_ARCHS: linux/amd64,linux/arm64

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - main
jobs:
  config:
    runs-on: ubuntu-latest
    outputs:
      KEYCLOAK_BASE_VERSION: ${{ steps.keycloak-base-version.outputs.KEYCLOAK_BASE_VERSION }}
      KEYCLOAK_OTDF_VERSION: ${{ steps.keycloak-otdf-version.outputs.KEYCLOAK_OTDF_VERSION }}
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v3
      - name: Select keycloak base version
        run: |
          KEYCLOAK_BASE_VERSION="$(cut -d- -f1 <containers/keycloak-protocol-mapper/VERSION)"
          echo "KEYCLOAK_BASE_VERSION=$KEYCLOAK_BASE_VERSION" >> $GITHUB_OUTPUT
        id: keycloak-base-version
      - name: Set output modified image version
        run: |
          KEYCLOAK_OTDF_VERSION="$(cut -d- -f1 <containers/keycloak-protocol-mapper/VERSION)"
          echo "KEYCLOAK_OTDF_VERSION=$KEYCLOAK_OTDF_VERSION" >> $GITHUB_OUTPUT
        id: keycloak-otdf-version
  build-base:
    outputs:
      digest: ${{ steps.publish.outputs.digest }}
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-latest
    timeout-minutes: 90
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/opentdf/python-base
          tags: |
            3.9-ubi9
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Inspect builder
        run: |
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish
        id: publish
        uses: docker/build-push-action@v3
        with:
          build-args: |-
            CONTAINER_REGISTRY=ghcr.io
            PY_VERSION=3.9
          context: ./containers/python_base
          file: ./containers/python_base/ubi9.Dockerfile
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: ${{ env.CONTAINER_ARCHS }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/feature/ubi9' && github.repository == 'opentdf/backend' }}

  # "isolated" - meaning these do not depend or build on `python_base`
  build-and-publish-isolated:
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-latest
    strategy:
      matrix:
        repo:
          - kas
          - keycloak-bootstrap
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/opentdf/${{ matrix.repo }}
          tags: |
            type=ref,event=branch
            type=sha
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: publish
        uses: docker/build-push-action@v3
        with:
          build-args: |-
            CONTAINER_REGISTRY=ghcr.io
            PY_VERSION=3.9
          context: ./containers/${{ matrix.repo }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: ${{ env.CONTAINER_ARCHS }}
          push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/feature/ubi9' && github.repository == 'opentdf/backend' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  build-and-publish:
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/feature/ubi9' }}
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-latest
    strategy:
      matrix:
        repo:
          - entitlement-pdp
          - entity-resolution
    timeout-minutes: 90
    steps:
      - uses: actions/checkout@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/opentdf/${{ matrix.repo }}
          tags: |
            type=ref,event=branch
            type=sha
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: publish
        uses: docker/build-push-action@v3
        with:
          build-args: |-
            CONTAINER_REGISTRY=ghcr.io
          context: ./containers/${{ matrix.repo }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: ${{ env.CONTAINER_ARCHS }}
          push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/feature/ubi9' && github.repository == 'opentdf/backend' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  build-and-publish-with-shared-base:
    needs:
      - build-base
    timeout-minutes: 10
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-latest
    strategy:
      matrix:
        repo:
          - entitlement_store
          - attributes
          - entitlements
    steps:
      - uses: actions/checkout@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/opentdf/${{ matrix.repo }}
          tags: |
            type=ref,event=branch
            type=sha
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: publish
        uses: docker/build-push-action@v3
        with:
          build-args: |-
            CONTAINER_REGISTRY=ghcr.io
            PY_VERSION=3.9
            PYTHON_BASE_IMAGE_SELECTOR=@${{ needs.build-base.outputs.digest }}
          context: ./containers
          cache-from: type=gha
          cache-to: type=gha,mode=max
          file: ./containers/${{ matrix.repo }}/ubi9.Dockerfile
          platforms: ${{ env.CONTAINER_ARCHS }}
          push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/feature/ubi9' && github.repository == 'opentdf/backend' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  custom-keycloak-image:
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/feature/ubi9' }}
    needs:
      - config
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-latest
    timeout-minutes: 90
    steps:
      - uses: actions/checkout@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/opentdf/keycloak
          tags: |
            type=ref,event=branch
            type=sha
      - name: Set up QEMU (required for crossbuild)
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: publish
        uses: docker/build-push-action@v3
        with:
          build-args: |-
            MAVEN_VERSION=3.8.4
            JDK_VERSION=11
            CONTAINER_REGISTRY=ghcr.io
            KEYCLOAK_BASE_VERSION=${{ needs.config.outputs.KEYCLOAK_BASE_VERSION }}
          context: ./containers/keycloak-protocol-mapper
          platforms: ${{ env.CONTAINER_ARCHS }}
          push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/feature/ubi9' && github.repository == 'opentdf/backend' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
