# Default values for entitlements.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

rootPath: /
openapiPath: /openapi.json
publicName: "Entitlements"
corsOrigins: "http://localhost:3000"
logLevel: DEBUG

postgres:
  host: localhost
  port: 5432
  user: tdf_entitlement_manager
#  value from kubernetes secrets
  password: ""
  database: tdf_database
  schema: tdf_entitlement

oidc:
  clientId: tdf-entitlements
  clientSecret: ""
  realm: master
  scopes: ""
#    trailing / is required
  serverUrl: http://keycloak/auth/
  configurationUrl: http://opentdf-keycloak/auth/realms/tdf/.well-known/openid-configuration
  authorizationUrl: https://keycloak.opentdf.us/keycloak/auth/realms/tdf/protocol/openid-connect/auth
  tokenUrl: https://keycloak.opentdf.us/keycloak/auth/realms/tdf/protocol/openid-connect/token


replicaCount: 1

image:
  repository: opentdf/entitlements
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 4030

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
